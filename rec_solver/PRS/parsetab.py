
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESAND ASSIGN COMMA DECRE DIV ELSE EQ GE GT ID IF INCRE LBRACE LE LPAREN LT ME MINUS MOD NE NOT NUMBER OR PE PLUS RBRACE RPAREN SEMI TIMES TRUEprogram : initializations ifinitializations : initialization initializationsinitializations : initialization : ID ASSIGN expression SEMIassignments : assignment assignmentsassignments : LBRACE assignments RBRACEassignments : assignment : ID ASSIGN expression SEMIassignment : ID INCRE SEMIassignment : ID DECRE SEMIassignment : ID PE NUMBER SEMIassignment : ID ME NUMBER SEMIcondition : expression cmpop expressioncondition : NOT LPAREN condition RPARENcondition : AND LPAREN condition_list RPARENcondition : TRUEcondition : OR LPAREN condition_list RPARENcondition : TIMEScondition : LPAREN condition RPARENcondition_list : condition COMMA condition_listcondition_list : conditioncmpop : GT\n             | GE\n             | LT\n             | LE\n             | EQ\n             | NEif : IF LPAREN condition RPAREN assignmentsif : IF LPAREN condition RPAREN assignments ELSE assignmentsif : IF LPAREN condition RPAREN assignments ELSE ifexpression : expression PLUS factor\n                  | expression MINUS factor\n                  | factorfactor : factor TIMES unary_expressionfactor : factor MOD unary_expressionfactor : unary_expressionfactor : factor DIV unary_expressionunary_expression : PLUS symbol_number\n                        | MINUS symbol_number\n                        | symbol_number\n                        | LPAREN expression RPARENsymbol_number : NUMBER\n                     | ID'
    
_lr_action_items = {'IF':([0,2,3,7,27,65,],[-3,6,-3,-2,-4,6,]),'ID':([0,3,8,9,12,14,17,19,27,28,29,31,32,33,38,39,40,41,42,43,44,45,46,47,48,57,58,65,68,75,81,82,86,87,88,],[4,4,10,10,10,10,10,10,-4,10,10,10,10,10,59,10,-22,-23,-24,-25,-26,-27,10,10,10,59,59,59,10,10,-9,-10,-8,-11,-12,]),'$end':([1,5,38,56,57,65,66,77,78,79,81,82,86,87,88,],[0,-1,-7,-28,-7,-7,-5,-29,-30,-6,-9,-10,-8,-11,-12,]),'ASSIGN':([4,59,],[8,68,]),'LPAREN':([6,8,9,17,19,22,23,25,28,29,31,32,33,39,40,41,42,43,44,45,46,47,48,68,75,],[9,17,19,17,19,46,47,48,17,17,17,17,17,17,-22,-23,-24,-25,-26,-27,19,19,19,17,19,]),'PLUS':([8,9,10,11,13,15,16,17,18,19,21,28,29,30,31,32,33,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,60,68,75,80,],[12,12,-43,28,-33,-36,-40,12,-42,12,28,12,12,-38,12,12,12,-39,28,28,12,-22,-23,-24,-25,-26,-27,12,12,12,-31,-32,-34,-35,-37,-41,28,12,12,28,]),'MINUS':([8,9,10,11,13,15,16,17,18,19,21,28,29,30,31,32,33,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,60,68,75,80,],[14,14,-43,29,-33,-36,-40,14,-42,14,29,14,14,-38,14,14,14,-39,29,29,14,-22,-23,-24,-25,-26,-27,14,14,14,-31,-32,-34,-35,-37,-41,29,14,14,29,]),'NUMBER':([8,9,12,14,17,19,28,29,31,32,33,39,40,41,42,43,44,45,46,47,48,68,71,72,75,],[18,18,18,18,18,18,18,18,18,18,18,18,-22,-23,-24,-25,-26,-27,18,18,18,18,83,84,18,]),'NOT':([9,19,46,47,48,75,],[22,22,22,22,22,22,]),'AND':([9,19,46,47,48,75,],[23,23,23,23,23,23,]),'TRUE':([9,19,46,47,48,75,],[24,24,24,24,24,24,]),'OR':([9,19,46,47,48,75,],[25,25,25,25,25,25,]),'TIMES':([9,10,13,15,16,18,19,30,34,46,47,48,49,50,51,52,53,54,75,],[26,-43,31,-36,-40,-42,26,-38,-39,26,26,26,31,31,-34,-35,-37,-41,26,]),'MOD':([10,13,15,16,18,30,34,49,50,51,52,53,54,],[-43,32,-36,-40,-42,-38,-39,32,32,-34,-35,-37,-41,]),'DIV':([10,13,15,16,18,30,34,49,50,51,52,53,54,],[-43,33,-36,-40,-42,-38,-39,33,33,-34,-35,-37,-41,]),'SEMI':([10,11,13,15,16,18,30,34,49,50,51,52,53,54,69,70,80,83,84,],[-43,27,-33,-36,-40,-42,-38,-39,-31,-32,-34,-35,-37,-41,81,82,86,87,88,]),'GT':([10,13,15,16,18,21,30,34,37,49,50,51,52,53,54,],[-43,-33,-36,-40,-42,40,-38,-39,40,-31,-32,-34,-35,-37,-41,]),'GE':([10,13,15,16,18,21,30,34,37,49,50,51,52,53,54,],[-43,-33,-36,-40,-42,41,-38,-39,41,-31,-32,-34,-35,-37,-41,]),'LT':([10,13,15,16,18,21,30,34,37,49,50,51,52,53,54,],[-43,-33,-36,-40,-42,42,-38,-39,42,-31,-32,-34,-35,-37,-41,]),'LE':([10,13,15,16,18,21,30,34,37,49,50,51,52,53,54,],[-43,-33,-36,-40,-42,43,-38,-39,43,-31,-32,-34,-35,-37,-41,]),'EQ':([10,13,15,16,18,21,30,34,37,49,50,51,52,53,54,],[-43,-33,-36,-40,-42,44,-38,-39,44,-31,-32,-34,-35,-37,-41,]),'NE':([10,13,15,16,18,21,30,34,37,49,50,51,52,53,54,],[-43,-33,-36,-40,-42,45,-38,-39,45,-31,-32,-34,-35,-37,-41,]),'RPAREN':([10,13,15,16,18,20,24,26,30,34,35,36,37,49,50,51,52,53,54,55,60,61,62,63,64,73,74,76,85,],[-43,-33,-36,-40,-42,38,-16,-18,-38,-39,54,55,54,-31,-32,-34,-35,-37,-41,-19,-13,73,74,-21,76,-14,-15,-17,-20,]),'COMMA':([10,13,15,16,18,24,26,30,34,49,50,51,52,53,54,55,60,63,73,74,76,],[-43,-33,-36,-40,-42,-16,-18,-38,-39,-31,-32,-34,-35,-37,-41,-19,-13,75,-14,-15,-17,]),'LBRACE':([38,57,58,65,81,82,86,87,88,],[58,58,58,58,-9,-10,-8,-11,-12,]),'ELSE':([38,56,57,66,79,81,82,86,87,88,],[-7,65,-7,-5,-6,-9,-10,-8,-11,-12,]),'RBRACE':([57,58,66,67,79,81,82,86,87,88,],[-7,-7,-5,79,-6,-9,-10,-8,-11,-12,]),'INCRE':([59,],[69,]),'DECRE':([59,],[70,]),'PE':([59,],[71,]),'ME':([59,],[72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'initializations':([0,3,],[2,7,]),'initialization':([0,3,],[3,3,]),'if':([2,65,],[5,78,]),'expression':([8,9,17,19,39,46,47,48,68,75,],[11,21,35,37,60,21,21,21,80,21,]),'factor':([8,9,17,19,28,29,39,46,47,48,68,75,],[13,13,13,13,49,50,13,13,13,13,13,13,]),'unary_expression':([8,9,17,19,28,29,31,32,33,39,46,47,48,68,75,],[15,15,15,15,15,15,51,52,53,15,15,15,15,15,15,]),'symbol_number':([8,9,12,14,17,19,28,29,31,32,33,39,46,47,48,68,75,],[16,16,30,34,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'condition':([9,19,46,47,48,75,],[20,36,61,63,63,63,]),'cmpop':([21,37,],[39,39,]),'assignments':([38,57,58,65,],[56,66,67,77,]),'assignment':([38,57,58,65,],[57,57,57,57,]),'condition_list':([47,48,75,],[62,64,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> initializations if','program',2,'p_program','parser.py',28),
  ('initializations -> initialization initializations','initializations',2,'p_initializations1','parser.py',51),
  ('initializations -> <empty>','initializations',0,'p_initializations2','parser.py',57),
  ('initialization -> ID ASSIGN expression SEMI','initialization',4,'p_initialization_1','parser.py',68),
  ('assignments -> assignment assignments','assignments',2,'p_assignments1','parser.py',100),
  ('assignments -> LBRACE assignments RBRACE','assignments',3,'p_assignments2','parser.py',104),
  ('assignments -> <empty>','assignments',0,'p_assignments3','parser.py',108),
  ('assignment -> ID ASSIGN expression SEMI','assignment',4,'p_assignment1','parser.py',112),
  ('assignment -> ID INCRE SEMI','assignment',3,'p_assignment2','parser.py',125),
  ('assignment -> ID DECRE SEMI','assignment',3,'p_assignment3','parser.py',133),
  ('assignment -> ID PE NUMBER SEMI','assignment',4,'p_assignment4','parser.py',141),
  ('assignment -> ID ME NUMBER SEMI','assignment',4,'p_assignment5','parser.py',149),
  ('condition -> expression cmpop expression','condition',3,'p_condition1','parser.py',198),
  ('condition -> NOT LPAREN condition RPAREN','condition',4,'p_condition2','parser.py',221),
  ('condition -> AND LPAREN condition_list RPAREN','condition',4,'p_condition3','parser.py',226),
  ('condition -> TRUE','condition',1,'p_condition_4','parser.py',236),
  ('condition -> OR LPAREN condition_list RPAREN','condition',4,'p_condition_5','parser.py',240),
  ('condition -> TIMES','condition',1,'p_condition_6','parser.py',247),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition_7','parser.py',251),
  ('condition_list -> condition COMMA condition_list','condition_list',3,'p_condition_list_1','parser.py',259),
  ('condition_list -> condition','condition_list',1,'p_condition_list_2','parser.py',263),
  ('cmpop -> GT','cmpop',1,'p_cmpop','parser.py',267),
  ('cmpop -> GE','cmpop',1,'p_cmpop','parser.py',268),
  ('cmpop -> LT','cmpop',1,'p_cmpop','parser.py',269),
  ('cmpop -> LE','cmpop',1,'p_cmpop','parser.py',270),
  ('cmpop -> EQ','cmpop',1,'p_cmpop','parser.py',271),
  ('cmpop -> NE','cmpop',1,'p_cmpop','parser.py',272),
  ('if -> IF LPAREN condition RPAREN assignments','if',5,'p_if_1','parser.py',296),
  ('if -> IF LPAREN condition RPAREN assignments ELSE assignments','if',7,'p_if_2','parser.py',305),
  ('if -> IF LPAREN condition RPAREN assignments ELSE if','if',7,'p_if_3','parser.py',311),
  ('expression -> expression PLUS factor','expression',3,'p_expression','parser.py',318),
  ('expression -> expression MINUS factor','expression',3,'p_expression','parser.py',319),
  ('expression -> factor','expression',1,'p_expression','parser.py',320),
  ('factor -> factor TIMES unary_expression','factor',3,'p_factor1','parser.py',341),
  ('factor -> factor MOD unary_expression','factor',3,'p_factor2','parser.py',345),
  ('factor -> unary_expression','factor',1,'p_factor3','parser.py',349),
  ('factor -> factor DIV unary_expression','factor',3,'p_factor4','parser.py',353),
  ('unary_expression -> PLUS symbol_number','unary_expression',2,'p_unary_expression_1','parser.py',358),
  ('unary_expression -> MINUS symbol_number','unary_expression',2,'p_unary_expression_1','parser.py',359),
  ('unary_expression -> symbol_number','unary_expression',1,'p_unary_expression_1','parser.py',360),
  ('unary_expression -> LPAREN expression RPAREN','unary_expression',3,'p_unary_expression_1','parser.py',361),
  ('symbol_number -> NUMBER','symbol_number',1,'p_symbol_number','parser.py',384),
  ('symbol_number -> ID','symbol_number',1,'p_symbol_number','parser.py',385),
]
