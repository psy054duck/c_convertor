
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESAND ASSIGN COMMA DECRE DIV ELSE EQ GE GT ID IF INCRE LBRACE LE LPAREN LT ME MINUS MOD NE NOT NUMBER OR PE PLUS RBRACE RPAREN SEMI TIMES TRUEprogram : initializations ifinitializations : initialization initializationsinitializations : initialization : ID ASSIGN expression SEMIassignments : assignment assignmentsassignments : LBRACE assignments RBRACEassignments : assignment : ID ASSIGN expression SEMIassignment : ID INCRE SEMIassignment : ID DECRE SEMIassignment : ID PE NUMBER SEMIassignment : ID ME NUMBER SEMIcondition : expression cmpop expressioncondition : NOT LPAREN condition RPARENcondition : AND LPAREN condition_list RPARENcondition : TRUEcondition : OR LPAREN condition_list RPARENcondition : TIMEScondition_list : condition COMMA condition_listcondition_list : conditioncmpop : GT\n             | GE\n             | LT\n             | LE\n             | EQ\n             | NEif : IF LPAREN condition RPAREN assignmentsif : IF LPAREN condition RPAREN assignments ELSE assignmentsif : IF LPAREN condition RPAREN assignments ELSE ifexpression : expression PLUS factor\n                  | expression MINUS factor\n                  | factorfactor : factor TIMES unary_expressionfactor : factor MOD unary_expressionfactor : unary_expressionfactor : factor DIV unary_expressionunary_expression : PLUS symbol_number\n                        | MINUS symbol_number\n                        | symbol_number\n                        | LPAREN expression RPARENsymbol_number : NUMBER\n                     | ID'
    
_lr_action_items = {'IF':([0,2,3,7,26,61,],[-3,6,-3,-2,-4,6,]),'ID':([0,3,8,9,12,14,17,26,27,28,30,31,32,35,36,37,38,39,40,41,42,43,44,45,53,54,61,64,71,77,78,82,83,84,],[4,4,10,10,10,10,10,-4,10,10,10,10,10,55,10,-21,-22,-23,-24,-25,-26,10,10,10,55,55,55,10,10,-9,-10,-8,-11,-12,]),'$end':([1,5,35,52,53,61,62,73,74,75,77,78,82,83,84,],[0,-1,-7,-27,-7,-7,-5,-28,-29,-6,-9,-10,-8,-11,-12,]),'ASSIGN':([4,55,],[8,64,]),'LPAREN':([6,8,9,17,21,22,24,27,28,30,31,32,36,37,38,39,40,41,42,43,44,45,64,71,],[9,17,17,17,43,44,45,17,17,17,17,17,17,-21,-22,-23,-24,-25,-26,17,17,17,17,17,]),'PLUS':([8,9,10,11,13,15,16,17,18,20,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,64,71,76,],[12,12,-42,27,-32,-35,-39,12,-41,27,12,12,-37,12,12,12,-38,27,12,-21,-22,-23,-24,-25,-26,12,12,12,-30,-31,-33,-34,-36,-40,27,12,12,27,]),'MINUS':([8,9,10,11,13,15,16,17,18,20,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,64,71,76,],[14,14,-42,28,-32,-35,-39,14,-41,28,14,14,-37,14,14,14,-38,28,14,-21,-22,-23,-24,-25,-26,14,14,14,-30,-31,-33,-34,-36,-40,28,14,14,28,]),'NUMBER':([8,9,12,14,17,27,28,30,31,32,36,37,38,39,40,41,42,43,44,45,64,67,68,71,],[18,18,18,18,18,18,18,18,18,18,18,-21,-22,-23,-24,-25,-26,18,18,18,18,79,80,18,]),'NOT':([9,43,44,45,71,],[21,21,21,21,21,]),'AND':([9,43,44,45,71,],[22,22,22,22,22,]),'TRUE':([9,43,44,45,71,],[23,23,23,23,23,]),'OR':([9,43,44,45,71,],[24,24,24,24,24,]),'TIMES':([9,10,13,15,16,18,29,33,43,44,45,46,47,48,49,50,51,71,],[25,-42,30,-35,-39,-41,-37,-38,25,25,25,30,30,-33,-34,-36,-40,25,]),'MOD':([10,13,15,16,18,29,33,46,47,48,49,50,51,],[-42,31,-35,-39,-41,-37,-38,31,31,-33,-34,-36,-40,]),'DIV':([10,13,15,16,18,29,33,46,47,48,49,50,51,],[-42,32,-35,-39,-41,-37,-38,32,32,-33,-34,-36,-40,]),'SEMI':([10,11,13,15,16,18,29,33,46,47,48,49,50,51,65,66,76,79,80,],[-42,26,-32,-35,-39,-41,-37,-38,-30,-31,-33,-34,-36,-40,77,78,82,83,84,]),'GT':([10,13,15,16,18,20,29,33,46,47,48,49,50,51,],[-42,-32,-35,-39,-41,37,-37,-38,-30,-31,-33,-34,-36,-40,]),'GE':([10,13,15,16,18,20,29,33,46,47,48,49,50,51,],[-42,-32,-35,-39,-41,38,-37,-38,-30,-31,-33,-34,-36,-40,]),'LT':([10,13,15,16,18,20,29,33,46,47,48,49,50,51,],[-42,-32,-35,-39,-41,39,-37,-38,-30,-31,-33,-34,-36,-40,]),'LE':([10,13,15,16,18,20,29,33,46,47,48,49,50,51,],[-42,-32,-35,-39,-41,40,-37,-38,-30,-31,-33,-34,-36,-40,]),'EQ':([10,13,15,16,18,20,29,33,46,47,48,49,50,51,],[-42,-32,-35,-39,-41,41,-37,-38,-30,-31,-33,-34,-36,-40,]),'NE':([10,13,15,16,18,20,29,33,46,47,48,49,50,51,],[-42,-32,-35,-39,-41,42,-37,-38,-30,-31,-33,-34,-36,-40,]),'RPAREN':([10,13,15,16,18,19,23,25,29,33,34,46,47,48,49,50,51,56,57,58,59,60,69,70,72,81,],[-42,-32,-35,-39,-41,35,-16,-18,-37,-38,51,-30,-31,-33,-34,-36,-40,-13,69,70,-20,72,-14,-15,-17,-19,]),'COMMA':([10,13,15,16,18,23,25,29,33,46,47,48,49,50,51,56,59,69,70,72,],[-42,-32,-35,-39,-41,-16,-18,-37,-38,-30,-31,-33,-34,-36,-40,-13,71,-14,-15,-17,]),'LBRACE':([35,53,54,61,77,78,82,83,84,],[54,54,54,54,-9,-10,-8,-11,-12,]),'ELSE':([35,52,53,62,75,77,78,82,83,84,],[-7,61,-7,-5,-6,-9,-10,-8,-11,-12,]),'RBRACE':([53,54,62,63,75,77,78,82,83,84,],[-7,-7,-5,75,-6,-9,-10,-8,-11,-12,]),'INCRE':([55,],[65,]),'DECRE':([55,],[66,]),'PE':([55,],[67,]),'ME':([55,],[68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'initializations':([0,3,],[2,7,]),'initialization':([0,3,],[3,3,]),'if':([2,61,],[5,74,]),'expression':([8,9,17,36,43,44,45,64,71,],[11,20,34,56,20,20,20,76,20,]),'factor':([8,9,17,27,28,36,43,44,45,64,71,],[13,13,13,46,47,13,13,13,13,13,13,]),'unary_expression':([8,9,17,27,28,30,31,32,36,43,44,45,64,71,],[15,15,15,15,15,48,49,50,15,15,15,15,15,15,]),'symbol_number':([8,9,12,14,17,27,28,30,31,32,36,43,44,45,64,71,],[16,16,29,33,16,16,16,16,16,16,16,16,16,16,16,16,]),'condition':([9,43,44,45,71,],[19,57,59,59,59,]),'cmpop':([20,],[36,]),'assignments':([35,53,54,61,],[52,62,63,73,]),'assignment':([35,53,54,61,],[53,53,53,53,]),'condition_list':([44,45,71,],[58,60,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> initializations if','program',2,'p_program','parser.py',28),
  ('initializations -> initialization initializations','initializations',2,'p_initializations1','parser.py',51),
  ('initializations -> <empty>','initializations',0,'p_initializations2','parser.py',57),
  ('initialization -> ID ASSIGN expression SEMI','initialization',4,'p_initialization_1','parser.py',68),
  ('assignments -> assignment assignments','assignments',2,'p_assignments1','parser.py',100),
  ('assignments -> LBRACE assignments RBRACE','assignments',3,'p_assignments2','parser.py',104),
  ('assignments -> <empty>','assignments',0,'p_assignments3','parser.py',108),
  ('assignment -> ID ASSIGN expression SEMI','assignment',4,'p_assignment1','parser.py',112),
  ('assignment -> ID INCRE SEMI','assignment',3,'p_assignment2','parser.py',125),
  ('assignment -> ID DECRE SEMI','assignment',3,'p_assignment3','parser.py',133),
  ('assignment -> ID PE NUMBER SEMI','assignment',4,'p_assignment4','parser.py',141),
  ('assignment -> ID ME NUMBER SEMI','assignment',4,'p_assignment5','parser.py',149),
  ('condition -> expression cmpop expression','condition',3,'p_condition1','parser.py',198),
  ('condition -> NOT LPAREN condition RPAREN','condition',4,'p_condition2','parser.py',221),
  ('condition -> AND LPAREN condition_list RPAREN','condition',4,'p_condition3','parser.py',226),
  ('condition -> TRUE','condition',1,'p_condition_4','parser.py',233),
  ('condition -> OR LPAREN condition_list RPAREN','condition',4,'p_condition_5','parser.py',237),
  ('condition -> TIMES','condition',1,'p_condition_6','parser.py',244),
  ('condition_list -> condition COMMA condition_list','condition_list',3,'p_condition_list_1','parser.py',252),
  ('condition_list -> condition','condition_list',1,'p_condition_list_2','parser.py',256),
  ('cmpop -> GT','cmpop',1,'p_cmpop','parser.py',260),
  ('cmpop -> GE','cmpop',1,'p_cmpop','parser.py',261),
  ('cmpop -> LT','cmpop',1,'p_cmpop','parser.py',262),
  ('cmpop -> LE','cmpop',1,'p_cmpop','parser.py',263),
  ('cmpop -> EQ','cmpop',1,'p_cmpop','parser.py',264),
  ('cmpop -> NE','cmpop',1,'p_cmpop','parser.py',265),
  ('if -> IF LPAREN condition RPAREN assignments','if',5,'p_if_1','parser.py',289),
  ('if -> IF LPAREN condition RPAREN assignments ELSE assignments','if',7,'p_if_2','parser.py',298),
  ('if -> IF LPAREN condition RPAREN assignments ELSE if','if',7,'p_if_3','parser.py',304),
  ('expression -> expression PLUS factor','expression',3,'p_expression','parser.py',311),
  ('expression -> expression MINUS factor','expression',3,'p_expression','parser.py',312),
  ('expression -> factor','expression',1,'p_expression','parser.py',313),
  ('factor -> factor TIMES unary_expression','factor',3,'p_factor1','parser.py',334),
  ('factor -> factor MOD unary_expression','factor',3,'p_factor2','parser.py',338),
  ('factor -> unary_expression','factor',1,'p_factor3','parser.py',342),
  ('factor -> factor DIV unary_expression','factor',3,'p_factor4','parser.py',346),
  ('unary_expression -> PLUS symbol_number','unary_expression',2,'p_unary_expression_1','parser.py',351),
  ('unary_expression -> MINUS symbol_number','unary_expression',2,'p_unary_expression_1','parser.py',352),
  ('unary_expression -> symbol_number','unary_expression',1,'p_unary_expression_1','parser.py',353),
  ('unary_expression -> LPAREN expression RPAREN','unary_expression',3,'p_unary_expression_1','parser.py',354),
  ('symbol_number -> NUMBER','symbol_number',1,'p_symbol_number','parser.py',377),
  ('symbol_number -> ID','symbol_number',1,'p_symbol_number','parser.py',378),
]
